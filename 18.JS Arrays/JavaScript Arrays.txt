Creating an Array(index62.html)
    JavaScript arrays are used to store multiple values in a single variable.
    An array can hold many values under a single name, and you can access the values by referring to an index number.
    Spaces and line breaks are not important. A declaration can span multiple lines:
    There is no need to use new Array().
    For simplicity, readability and execution speed, use the first one 

Access the Elements of an Array
    You access an array element by referring to the index number.

Changing an Array Element
    This statement changes the value of the first element in cars
        cars[0] = "Opel";

Access the Full Array
    With JavaScript, the full array can be accessed by referring to the array name:
    Ex:-
    var cars = ["Saab", "Volvo", "BMW"];
    document.getElementById("demo").innerHTML = cars;

Arrays are Objects
    Arrays are a special type of objects. The typeof operator in JavaScript returns "object" for arrays.
    But, JavaScript arrays are best described as arrays.
    Arrays use numbers to access its "elements".In this example, person[0]
    var person = ["John", "Doe", 46];
    Objects use names to access its "members". In this example, person.firstName
    var person = {firstName:"John", lastName:"Doe", age:46};

Array Elements Can Be Objects
    JavaScript variables can be objects. Arrays are special kinds of objects.
    Because of this, you can have variables of different types in the same Array.
    You can have objects in an Array. You can have functions in an Array. You can have arrays in an Array:

Array Properties(index63.html)
    The length Property
        The length property of an array returns the length of an array (the number of array elements).
        The length property is always one more than the highest array index.

Looping Array Elements(index64.html)
    The safest way to loop through an array, is using a for loop:
    You can also use the Array.forEach() function:

Adding Array Elements(index65.html)
    The easiest way to add a new element to an array is using the push() method
    New element can also be added to an array using the length property:
    Adding elements with high indexes can create undefined "holes" in an array:
    JavaScript does not support arrays with named indexes.
How to Recognize an Array
    The problem is that the JavaScript operator typeof returns "object"
    Solution 1:
        To solve this problem ECMAScript 5 defines a new method Array.isArray():